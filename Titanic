import pandas as pd
import numpy as np
import tensorflow as tf
from tensorflow.keras import layers
from sklearn.ensemble import RandomForestClassifier

train_df=pd.read_csv('train.csv')
test_df= pd.read_csv('test.csv')


data= [train_df, test_df]
for dataset in data:
    dataset['Age']=dataset['Age'].fillna(dataset['Age'].mean())
    dataset['Age']=dataset['Age'].astype(int)
    

gender ={'male':0, 'female':1}
data= [train_df,test_df]
for dataset in data:
      dataset['Sex']=dataset['Sex'].map(gender)
      
port ={'S':0,'C':1,'Q':2}
train_df['Embarked']=train_df['Embarked'].fillna('S')
data= [train_df, test_df]
for dataset in data:
    dataset['Embarked']= dataset['Embarked'].map(port)     
    
data = [train_df, test_df]
for dataset in data:
    dataset.loc[ dataset['Age'] <= 11, 'Age'] = 0
    dataset.loc[(dataset['Age'] > 11) & (dataset['Age'] <= 18), 'Age'] = 1
    dataset.loc[(dataset['Age'] > 18) & (dataset['Age'] <= 22), 'Age'] = 2
    dataset.loc[(dataset['Age'] > 22) & (dataset['Age'] <= 27), 'Age'] = 3
    dataset.loc[(dataset['Age'] > 27) & (dataset['Age'] <= 33), 'Age'] = 4
    dataset.loc[(dataset['Age'] > 33) & (dataset['Age'] <= 40), 'Age'] = 5
    dataset.loc[(dataset['Age'] > 40) & (dataset['Age'] <= 66), 'Age'] = 6
    dataset.loc[ dataset['Age'] > 66, 'Age'] = 6    
    
    
train_df=train_df.drop(['Cabin'],axis=1)
train_df=train_df.drop(['Ticket'],axis=1)
train_df=train_df.drop(['Fare'],axis=1)
train_df=train_df.drop(['Name'],axis=1)


test_df=test_df.drop(['Cabin'],axis=1)
test_df=test_df.drop(['Ticket'],axis=1)
test_df=test_df.drop(['Fare'],axis=1)
test_df=test_df.drop(['Name'],axis=1)

train_df=train_df.drop(['PassengerId'], axis=1)
x_train=train_df.drop(['Survived'], axis =1)
y_train=train_df['Survived']
x_test=test_df.drop(['PassengerId'],axis=1).copy()

my_model=RandomForestClassifier(n_estimators=100)
my_model.fit(x_train,y_train)
prediction=my_model.predict(x_test)
print(prediction)

my_score= round(my_model.score(x_train,y_train)*100,2)
print(my_score)
